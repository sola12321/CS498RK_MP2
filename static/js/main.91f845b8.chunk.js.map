{"version":3,"sources":["components/Gallery/GalleryItem.module.scss","components/SearchBar/SearchItems/SearchItem.jsx","components/SearchBar/SearchBar.jsx","components/Gallery/GalleryItem.jsx","components/Gallery/Gallery.jsx","components/Main/Main.jsx","components/View/View.jsx","components/App/App.js","serviceWorker.js","index.js","components/SearchBar/SearchBar.module.scss","components/Gallery/Gallery.module.scss","components/View/View.module.scss"],"names":["module","exports","GalleryItem","SearchItem","props","react_default","a","createElement","List","Item","Image","size","src","movie","poster_path","Content","Link","to","id","toString","Header","title","Description","release_date","SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","idOrder","popularityOrder","inputChangeHandler","bind","assertThisInitialized","idOrderChangeHandler","popularityOrderChangeHandler","console","log","flag","sort","b","popularity","setState","event","_this2","queryStr","target","value","length","axios","get","then","response","data","results","catch","error","res","map","item","SearchItems_SearchItem","className","SearchArea","InputField","Checkbox","label","onChange","Input","icon","placeholder","SearchRes","divided","verticalAlign","Component","detailLink","GalleryItemCss","Segment","padded","alt","Label","Gallery","changeTypeHandler","type","baseUrl","_this3","Gallery_GalleryItem","ButtonGroup","Button","Group","widths","onClick","Divider","ItemsCss","Main","components_SearchBar_SearchBar","components_Gallery_Gallery","View","location","pathname","substring","parseInt","changeContentHandler","_this4","view","genres","g","name","Container","floated","overview","Buttons","labelPosition","content","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Items"],"mappings":"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","file":"static/js/main.91f845b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GalleryItem\":\"GalleryItem_GalleryItem__2nuyP\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {List, Image} from \"semantic-ui-react\";\nimport PropTypes from 'prop-types';\n\nfunction SearchItem(props) {\n    return (\n            <List.Item>\n                <Image size=\"mini\" src={'http://image.tmdb.org/t/p/w185/'+ props.movie.poster_path} />\n                <List.Content>\n                    <Link to={\"/View/:\" + props.movie.id.toString()}>\n                    <List.Header>{props.movie.title}</List.Header>\n                     <List.Description>{props.movie.release_date}</List.Description>\n                    </Link>\n                </List.Content>\n            </List.Item>\n    );\n\n}\nSearchItem.propTypes = {\n    movie: PropTypes.object\n};\n\nexport default SearchItem;","import React, {Component} from 'react';\nimport {InputField, SearchArea, SearchRes} from \"./SearchBar.module.scss\";\nimport {Input} from 'semantic-ui-react';\nimport SearchItem from './SearchItems/SearchItem';\nimport { Checkbox, List } from 'semantic-ui-react';\nimport axios from 'axios';\n\n\nclass SearchBar extends Component {\n    constructor() {\n        super();\n        this.state = {\n            items:[],\n            idOrder: false,  //True for inc, False for dec\n            popularityOrder: false\n        };\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\n        this.idOrderChangeHandler = this.idOrderChangeHandler.bind(this);\n        this.popularityOrderChangeHandler = this.popularityOrderChangeHandler.bind(this);\n    }\n\n    idOrderChangeHandler(){\n        console.log(this.state.idOrder);\n        let flag = this.state.idOrder;\n        let items = this.state.items;\n        items.sort(function(a,b){\n            if(flag){\n                return a.popularity - b.popularity;\n            } else {\n                return b.popularity - a.popularity;\n            }\n        });\n        this.setState({idOrder: !this.state.idOrder, items:items});\n    }\n    popularityOrderChangeHandler(){\n        let flag = this.state.popularityOrder;\n        let items = this.state.items;\n        items.sort(function(a,b){\n            if(flag){\n                return a.popularity - b.popularity;\n            } else {\n                return b.popularity - a.popularity;\n            }\n        });\n        this.setState({popularityOrder: !this.state.popularityOrder, items:items});\n    }\n\n\n    inputChangeHandler(event){\n        console.log(\"here\");\n        const baseUrl = 'https://api.themoviedb.org/3/search/movie?page=1&api_key=fc69623e0fb05a8389af39791861271d&query='\n        let queryStr = event.target.value;\n        if (queryStr.length === 0){\n            this.setState({\n                items: []\n            });\n        }\n        else{\n            axios.get(baseUrl+queryStr).then((response) => {\n                let items = response.data.results;\n                let flag = this.state.popularityOrder;\n                items.sort(function(a,b){\n                    if(flag){\n                        return a.popularity - b.popularity;\n                    } else {\n                        return b.popularity - a.popularity;\n                    }\n                });\n                flag = this.state.idOrder;\n                items.sort(function(a,b){\n                    if(flag){\n                        return a.id - b.id;\n                    } else {\n                        return b.id - a.id;\n                    }\n                });\n                this.setState({\n                    items: items\n                });\n                console.log(this.state.items.length);\n            }).catch((error) => {\n                console.log(error);\n            });\n        }\n    }\n\n    render() {\n        const res = this.state.items.map(\n            (item)=><SearchItem movie={item}/>\n        );\n        return (\n            <div className={SearchArea}>\n                <div className={InputField}>\n                    <div>\n                        <Checkbox label=\"Ascending on popularity?\" onChange={this.popularityOrderChangeHandler}/>\n                    </div>\n                    <div>\n                        <Checkbox label=\"Ascending on id?\" onChange={this.idOrderChangeHandler}/>\n                    </div>\n                    <p>Please check the box before search.</p>\n                    <Input size='large' icon='search' placeholder='Search...' onChange={this.inputChangeHandler}/>\n                </div>\n                <div className={SearchRes}>\n                    <List divided verticalAlign='middle'>\n                        {res}\n                    </List>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport { Segment, Image, Label, Button} from 'semantic-ui-react';\nimport {GalleryItem as GalleryItemCss} from \"./GalleryItem.module.scss\"\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nfunction GalleryItem(props) {\n    const detailLink = \"/View/:\" + props.movie.id.toString();\n    return (\n        <div className={GalleryItemCss}>\n            <Link to={detailLink}>\n                <Segment padded>\n                    <img src={'http://image.tmdb.org/t/p/w185/' + props.movie.poster_path} alt=\"Not Found\"/>\n                    <Label size=\"large\">{props.movie.title} </Label>\n                </Segment>\n            </Link>\n        </div>\n    );\n}\n\nexport default GalleryItem;","import React, {Component} from 'react';\nimport { Button, Divider } from 'semantic-ui-react';\nimport {ButtonGroup, Items as ItemsCss} from './Gallery.module.scss';\nimport axios from 'axios';\nimport GalleryItem from \"./GalleryItem\";\n\nclass Gallery extends Component {\n    constructor() {\n        super();\n        this.state = {\n            items: [],\n        };\n\n        this.changeTypeHandler = this.changeTypeHandler.bind(this);\n    }\n\n    changeTypeHandler(type){\n        const baseUrls = [\"https://api.themoviedb.org/3/movie/popular?api_key=fc69623e0fb05a8389af39791861271d&page=1\",\n                          \"https://api.themoviedb.org/3/movie/top_rated?api_key=fc69623e0fb05a8389af39791861271d&page=1\",\n                          \"https://api.themoviedb.org/3/movie/upcoming?api_key=fc69623e0fb05a8389af39791861271d&page=1\"];\n        const baseUrl = baseUrls[type];\n        axios.get(baseUrl).then((response) => {\n            const items = response.data.results;\n            this.setState({\n                items: items\n            });\n            console.log(this.state.items.length);\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        let items = [];\n        if(this.state.items.length > 0) {\n            items = this.state.items.map((item)=> <GalleryItem movie={item} />)\n        }\n\n        return (\n            <div>\n                <div className={ButtonGroup}>\n                    <Button.Group widths='3' size=\"large\">\n                        <Button onClick={()=>this.changeTypeHandler(0)}>Popular</Button>\n                        <Button onClick={()=>this.changeTypeHandler(1)}>Top Rated</Button>\n                        <Button onClick={()=>this.changeTypeHandler(2)}>Upcoming</Button>\n                        <Divider/>\n                    </Button.Group>\n                </div>\n                <div className={ItemsCss}>\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Gallery;","import React from 'react';\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Gallery from \"../Gallery/Gallery\";\n\nfunction Main(props) {\n    return (\n        <div>\n            <SearchBar/>\n            <Gallery/>\n        </div>\n    );\n}\n\nexport default Main;","import React, {Component}from 'react';\nimport {Image, Container, Label,Button} from 'semantic-ui-react';\nimport {Content, Buttons} from \"./View.module.scss\";\nimport axios from 'axios';\n\nclass View extends Component{\n    constructor(props){\n        super();\n        const id = props.location.pathname.substring(7);\n        console.log(id);\n        this.state = { id: parseInt(id), movie: null };\n        this.changeContentHandler = this.changeContentHandler.bind(this);\n    }\n    componentDidMount(){\n        const queryStr = \"https://api.themoviedb.org/3/movie/\"+this.state.id.toString()+\"?api_key=fc69623e0fb05a8389af39791861271d\";\n        let movie = null;\n        axios.get(queryStr).then((response) => {\n            movie = response.data;\n            this.setState({movie:movie});\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    changeContentHandler(id){\n        const queryStr = \"https://api.themoviedb.org/3/movie/\"+id.toString()+\"?api_key=fc69623e0fb05a8389af39791861271d\";\n        let movie = null;\n        axios.get(queryStr).then((response) => {\n            movie = response.data;\n            this.setState({movie:movie, id:id});\n        }).catch((error) => {\n            movie=null;\n            this.setState({movie:movie, id:id})\n        });\n    }\n\n\n    render(){\n        let view = <div>No result with id={this.state.id.toString()}</div>;\n        if(this.state.movie !== null){\n            const genres = this.state.movie.genres.map((g)=>(\n                <Label size=\"large\">{g.name}</Label>\n            ));\n            view =\n                <Container>\n                    <Image src={'http://image.tmdb.org/t/p/w185/'+ this.state.movie.poster_path} alt=\"Not Found\" floated='left'/>\n                    <h2>{this.state.movie.title}</h2>\n                    <h5>Date:{this.state.movie.release_date} Id:{this.state.movie.id}</h5>\n                    <p>{this.state.movie.overview}</p>\n                        {genres}\n                </Container>\n        }\n        return(\n            <div className={Content}>\n                <div className={Buttons}>\n                    <Button labelPosition='left' icon='left chevron' content='Previous' onClick={()=>this.changeContentHandler(this.state.id-1)}/>\n                    <Button labelPosition='right' icon='right chevron' content='Next' onClick={()=>this.changeContentHandler(this.state.id+1)}/>\n                </div>\n                {view}\n            </div>\n        );\n    }\n}\n\nexport default View;","import React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Main from \"../Main/Main\";\nimport View from \"../View/View\";\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <Switch>\n            <Route exact path=\"https://github.com/sola12321/CS498RK_MP2\" component={Main}/>\n            <Route path=\"/View/\"component={View}/>\n          </Switch>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchArea\":\"SearchBar_SearchArea__3YhlE\",\"InputField\":\"SearchBar_InputField__3gXFX\",\"SearchRes\":\"SearchBar_SearchRes__2wCg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonGroup\":\"Gallery_ButtonGroup__2S4lB\",\"Items\":\"Gallery_Items__29qVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"View_Content__1Yr8H\",\"Buttons\":\"View_Buttons__Zu4ON\"};"],"sourceRoot":""}